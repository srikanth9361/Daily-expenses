<!-- <!DOCTYPE html>
<html>

<head>
    <title>Expense Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
    <div class="mb-3 row">
        <label for="" class="col-sm-2 col-form-label">User Name</label>
        <div class="col-sm-10">
            <select id="userId"></select>
        </div>
    </div>

    <div class="mb-3 row">
        <label for="" class="col-sm-2 col-form-label">Category Name</label>
        <div class="col-sm-10">
            <select id="categoryId"></select>
        </div>
    </div>

    <div class="mb-3 row">
        <label for="" class="col-sm-2 col-form-label">Amount</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="amount">
        </div>
    </div>

    <div class="mb-3 row">
        <label for="" class="col-sm-2 col-form-label">Description </label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="description">
        </div>
    </div>

    <div class="mb-3 row">
        <label for="" class="col-sm-2 col-form-label">Expense Data</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="expenseDate">
        </div>
    </div>

    <div class="mb-3 row"></div>
    <label for="" class="col-sm-2 col-form-label">Payment Method</label>
    <div class="col-sm-10">
        <input type="text" class="form-control" id="paymentMethod">
    </div>
    </div>

    <input type="hidden" id="id" value="<%=id%>">
    <button onclick="saveOrUpdateExpense()">sumbit</button>
</body>
<script>
    var userId = document.getElementById('userId')
    var categoryId = document.getElementById('categoryId')
    var amount = document.getElementById('amount')
    var description = document.getElementById('description')
    var expenseDate = document.getElementById('expenseDate')
    var paymentMethod = document.getElementById('paymentMethod')
    var id = document.getElementById('id').value

    function saveOrUpdateExpense() {
        const myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");

        const raw = JSON.stringify({
            "userId": userId.value,
            "categoryId": categoryId.value,
            "amount": amount.value,
            "description": description.value,
            "expenseDate": expenseDate.value,
            "paymentMethod": paymentMethod.value
        });

        const requestOptions = {
            method: id ? "PUT" : "POST",
            headers: myHeaders,
            body: raw,
            redirect: "follow"
        };

        let url = "http://localhost:1000/api/expense"
        if (id) {
            url += '/' + id
        }

        fetch(url, requestOptions)
            .then(() =>
                window.location = '/expense'
            )
            .catch((error) => console.error(error));
    }

    if (id) {
        getExpenseById(id)
    }

    function getExpenseById(id) {
        const requestOptions = {
            method: "GET",
        };

        fetch("http://localhost:1000/api/expense/" + id, requestOptions)
            .then((response) => response.json())
            .then((expense) => {
                userId.value = expense.userId
                categoryId.value = expense.categoryId
                amount.value = expense.amount
                description.value = expense.description
                expenseDate.value = expense.expenseDate
                paymentMethod.value = expense.paymentMethod
            })
            .catch((error) => console.error(error));
    }

    async function initializeForm() {
        await populateUserName()
        await populateCategoryName()

        if (id) {
            await getExpenseById(id)
        }
    }
    initializeForm()

    async function populateUserName() {
        try {
            const myHeaders = new Headers();

            const requestOptions = {
                method: "GET",
                headers: myHeaders
            };

            fetch("http://localhost:1000/api/user/idandusername", requestOptions)
                .then(async (result) => {
                    const users = await result.json()
                    console.log(users)

                    userId.innerHTML = '<Option>Select a User Name</option>'

                    users.forEach(user => {
                        var option = document.createElement('option')
                        option.value = user.userId
                        option.textContent = user.userName
                        userId.appendChild(option)

                    });


                })
                .catch((error) => console.error(error));
        } catch (error) {
            console.log(error)
        }
    }

    async function populateCategoryName() {
        try {
            const myHeaders = new Headers();

            const requestOptions = {
                method: "GET",
                headers: myHeaders
            };

            fetch("http://localhost:1000/api/category", requestOptions)
                .then(async (result) => {
                    const categorys = await result.json()
                    console.log(categorys)
                    categoryId.innerHTML = '<Option>Select a Category Name</option>'

                    categorys.forEach(category => {
                        var option = document.createElement('option')
                        option.value = category.id
                        option.textContent = category.categoryName
                        categoryId.appendChild(option)

                    });


                })
                .catch((error) => console.error(error));
        } catch (error) {
            console.log(error)
        }
    }



</script>

</html> -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
    <div class="container mt-5">
        <div class="card p-4">
            <h3 class="text-center mb-4">Expense Form</h3>
            
            <div class="mb-3 row">
                <label for="userId" class="col-sm-2 col-form-label">User Name</label>
                <div class="col-sm-10">
                    <!-- <input type="text" id="userId"> -->
                    <select id="userId" class="form-select" required></select>
                </div>
            </div>

            <div class="mb-3 row">
                <label for="categoryId" class="col-sm-2 col-form-label">Category Name</label>
                <div class="col-sm-10">
                    <select id="categoryId" class="form-select" required></select>
                </div>
            </div>

            <div class="mb-3 row">
                <label for="amount" class="col-sm-2 col-form-label">Amount</label>
                <div class="col-sm-10">
                    <input type="number" class="form-control" id="amount" required>
                </div>
            </div>

            <div class="mb-3 row">
                <label for="description" class="col-sm-2 col-form-label">Description</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="description" required>
                </div>
            </div>

            <div class="mb-3 row">
                <label for="expenseDate" class="col-sm-2 col-form-label">Expense Date</label>
                <div class="col-sm-10">
                    <input type="date" class="form-control" id="expenseDate" required>
                </div>
            </div>

            <div class="mb-3 row">
                <label for="paymentMethod" class="col-sm-2 col-form-label">Payment Method</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="paymentMethod" required>
                </div>
            </div>

            <input type="hidden" id="id" value="<%=id%>">
            
            <div class="d-grid gap-2">
                <button class="btn btn-primary" onclick="saveOrUpdateExpense()">Submit</button>
            </div>
        </div>
    </div>

    <script>
        var userId = document.getElementById('userId');
        var categoryId = document.getElementById('categoryId');
        var amount = document.getElementById('amount');
        var description = document.getElementById('description');
        var expenseDate = document.getElementById('expenseDate');
        var paymentMethod = document.getElementById('paymentMethod');
        var id = document.getElementById('id').value;

        function saveOrUpdateExpense() {
            const myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            const raw = JSON.stringify({
                "userId": userId.value,
                "categoryId": categoryId.value,
                "amount": amount.value,
                "description": description.value,
                "expenseDate": expenseDate.value,
                "paymentMethod": paymentMethod.value
            });

            const requestOptions = {
                method: id ? "PUT" : "POST",
                headers: myHeaders,
                body: raw,
                redirect: "follow"
            };

            let url = "http://localhost:1000/api/expense";
            if (id) {
                url += '/' + id;
            }

            fetch(url, requestOptions)
                .then(() => window.location = '/expense')
                .catch((error) => console.error(error));
        }

        if (id) {
            getExpenseById(id);
        }

        function getExpenseById(id) {
            const requestOptions = {
                method: "GET",
            };

            fetch("http://localhost:1000/api/expense/" + id, requestOptions)
                .then((response) => response.json())
                .then(([expense]) => {
                    console.log(expense);                   
                    userId.value = expense.userId;
                    categoryId.value = expense.categoryId;
                    console.log(expense.categoryId)
                    console.log(expense.amount)
                    console.log(typeof expense.amount)
                    amount.value = expense.amount;
                    description.value = expense.description;
                    expenseDate.value = expense.expenseDate 
                ? new Date(expense.expenseDate).toISOString().split("T")[0] 
                : '';

                    paymentMethod.value = expense.paymentMethod;
                })
                .catch((error) => console.error(error));
        }

        async function initializeForm() {
            await populateUserName();
            await populateCategoryName();

            if (id) {
                await getExpenseById(id);
            }
        }

        initializeForm();

        async function populateUserName() {
            try {
                const myHeaders = new Headers();

                const requestOptions = {
                    method: "GET",
                    headers: myHeaders
                };

                fetch("http://localhost:1000/api/user/idandusername", requestOptions)
                    .then(async (result) => {
                        const users = await result.json();
                        userId.innerHTML = '<option>Select a User Name</option>';

                        users.forEach(user => {
                            var option = document.createElement('option');
                            option.value = user.userId;
                            option.textContent = user.userName;
                            userId.appendChild(option);
                        });
                    })
                    .catch((error) => console.error(error));
            } catch (error) {
                console.log(error);
            }
        }

        async function populateCategoryName() {
            try {
                const myHeaders = new Headers();

                const requestOptions = {
                    method: "GET",
                    headers: myHeaders
                };

                fetch("http://localhost:1000/api/category", requestOptions)
                    .then(async (result) => {
                        const categories = await result.json();
                        categoryId.innerHTML = '<option>Select a Category Name</option>';

                        categories.forEach(category => {
                            var option = document.createElement('option');
                            option.value = category.id;
                            option.textContent = category.categoryName;
                            categoryId.appendChild(option);
                        });
                    })
                    .catch((error) => console.error(error));
            } catch (error) {
                console.log(error);
            }
        }
    </script>
</body>

</html>
