<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Expense Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
    <div class="container mt-4">
        <h2>Generate Expense Report</h2>
        <form id="reportForm">
            <div class="d-flex gap-2 mb-3">
                <div class="mb-3">
                    <label for="userId" class="form-label">User ID</label>
                    <input type="number" id="userId" class="form-control" placeholder="Enter User ID" required>
                </div>
                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" class="form-control" required>
                </div>
            </div>
            <button type="button" class="btn btn-primary" id="generateReportButton">Generate Report</button>
        </form>

        <div class="table-responsive mt-4">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>S.no</th>
                        <th>User Name</th>
                        <th>Category Name</th>
                        <th>Amount</th>
                        <th>Expense Date</th>
                    </tr>
                </thead>
                <tbody id="expenseData">

                </tbody>
            </table>
        </div>
    </div>

    <script>
        const generateReportButton = document.getElementById('generateReportButton');
        const tableData = document.getElementById('expenseData');

        generateReportButton.addEventListener('click', function () {
            const userId = document.getElementById('userId').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            let url = `http://localhost:1000/api/expense/report?userId=${userId}&startDate=${startDate}&endDate=${endDate}`;

            fetch(url)
                .then(response => response.json())
                .then(expenseData => {
                    let trHtml = '';
                    if (expenseData.length === 0) {
                        trHtml = `<tr><td colspan="5" class="text-center">No expenses found for the selected filters.</td></tr>`;
                    } else {
                        expenseData.forEach((expense, index) => {
                            trHtml += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${expense.userName}</td>
                                    <td>${expense.categoryName}</td>
                                    <td>${expense.amount}</td>
                                    <td>${expense.expenseDate}</td>
                                </tr>
                            `;
                        });
                    }
                    tableData.innerHTML = trHtml;
                })
                .catch(error => console.error(error));
        });
    </script>
</body>

</html> -->

<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Expense Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
</head>

<body>
    <div class="container mt-4">
        <h2>Generate Expense Report</h2>
        <form id="reportForm">
            <div class="d-flex gap-2 mb-3">
                <div class="mb-3">
                    <label for="userId" class="form-label">User ID</label>
                    <input type="number" id="userId" class="form-control" placeholder="Enter User ID" required>
                </div>
                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" class="form-control" required>
                </div>
            </div>
            <button type="button" class="btn btn-primary" id="generateReportButton">Generate Report</button><br><br>
            <button type="button" class="btn btn-success" id="downloadExcelButton" style="display:none;">Download Excel</button>
        </form>

        <div class="table-responsive mt-4">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>S.no</th>
                        <th>User Name</th>
                        <th>Category Name</th>
                        <th>Amount</th>
                        <th>Description</th>
                        <th>Expense Date</th>
                    </tr>
                </thead>
                <tbody id="expenseData">

                </tbody>
            </table>
        </div>
    </div>

    <script>
        const generateReportButton = document.getElementById('generateReportButton');
        const downloadExcelButton = document.getElementById('downloadExcelButton');
        const tableData = document.getElementById('expenseData');
        let expenseDataGlobal = [];

        generateReportButton.addEventListener('click', function () {
            const userId = document.getElementById('userId').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            let url = `http://localhost:1000/api/expense/report?userId=${userId}&startDate=${startDate}&endDate=${endDate}`;

            fetch(url)
                .then(response => response.json())
                .then(expenseData => {
                    let trHtml = '';
                    expenseDataGlobal = expenseData; 

                    if (expenseData.length === 0) {
                        trHtml = `<tr><td colspan="5" class="text-center">No expenses found for the selected filters.</td></tr>`;
                    } else {
                        expenseData.forEach((expense, index) => {
                            trHtml += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${expense.userName}</td>
                                    <td>${expense.categoryName}</td>
                                    <td>${expense.amount}</td>
                                    <td>${expense.description}</td>
                                    <td>${expense.expenseDate}</td>
                                </tr>
                            `;
                        });
                    }
                    tableData.innerHTML = trHtml;

                    downloadExcelButton.style.display = 'block';
                })
                .catch(error => console.error(error));
        });

        downloadExcelButton.addEventListener('click', function () {
            const filteredData = expenseDataGlobal.map(expense => ({
                'User Name': expense.userName,
                'Category Name': expense.categoryName,
                'Amount': expense.amount,
                'Description': expense.description,
                'Expense Date': expense.expenseDate
            }));
            console.log(filteredData)

            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.json_to_sheet(filteredData);

            XLSX.utils.book_append_sheet(wb, ws, "Expense Report");

            XLSX.writeFile(wb, "Expense_Report.xlsx");
        });
    </script>
</body>

</html> -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Expense Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script> 
</head>

<body>
    <div class="container mt-4">
        <h2>Generate Expense Report</h2>
        <form id="reportForm">
            <div class="d-flex gap-2 mb-3">
                <div class="mb-3">
                    <label for="userId" class="form-label">User ID</label>
                    <input type="number" id="userId" class="form-control" placeholder="Enter User ID" required>
                </div>
                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" class="form-control" required>
                </div>
            </div>
            <button type="button" class="btn btn-primary" id="generateReportButton">Generate Report</button><br><br>
            <button type="button" class="btn btn-success" id="downloadExcelButton" style="display:none;">Download Excel</button>
        </form>

        <div class="table-responsive mt-4">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>S.no</th>
                        <th>User Name</th>
                        <th>Category Name</th>
                        <th>Amount</th>
                        <th>Description</th>
                        <th>Expense Date</th>
                    </tr>
                </thead>
                <tbody id="expenseData">

                </tbody>
            </table>
        </div>

        <div class="mt-4">
            <canvas id="expensePieChart" style="height:400px;max-width:400px"></canvas> 
        </div>
    </div>

    <script>
        const generateReportButton = document.getElementById('generateReportButton');
        const downloadExcelButton = document.getElementById('downloadExcelButton');
        const tableData = document.getElementById('expenseData');
        const expensePieChartCanvas = document.getElementById('expensePieChart').getContext('2d'); 
        let expenseDataGlobal = [];
        let pieChartInstance = null; 

        generateReportButton.addEventListener('click', function () {
            const userId = document.getElementById('userId').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            let url = `http://localhost:1000/api/expense/report?userId=${userId}&startDate=${startDate}&endDate=${endDate}`;

            fetch(url)
                .then(response => response.json())
                .then(expenseData => {
                    let trHtml = '';
                    expenseDataGlobal = expenseData;

                    if (expenseData.length === 0) {
                        trHtml = `<tr><td colspan="6" class="text-center">No expenses found for the selected filters.</td></tr>`;
                    } else {
                        expenseData.forEach((expense, index) => {
                            trHtml += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${expense.userName}</td>
                                    <td>${expense.categoryName}</td>
                                    <td>${expense.amount}</td>
                                    <td>${expense.description}</td>
                                    <td>${expense.expenseDate}</td>
                                </tr>
                            `;
                        });
                        generatePieChart(expenseData);
                    }

                    tableData.innerHTML = trHtml;
                    downloadExcelButton.style.display = 'block';
                })
                .catch(error => console.error(error));
        });

        function generatePieChart(expenseData) {
            const categoryTotals = expenseData.reduce((acc, expense) => {
                if (acc[expense.categoryName]) {
                    acc[expense.categoryName] += expense.amount;
                } else {
                    acc[expense.categoryName] = expense.amount;
                }
                return acc;
            }, {});

            const categories = Object.keys(categoryTotals);
            const amounts = categories.map(category => categoryTotals[category]);

            pieChartInstance = new Chart(expensePieChartCanvas, {
                type: 'pie', 
                data: {
                    labels: categories, 
                    datasets: [{
                        data: amounts, 
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#FF5733'], 
                    }]
                },
            });
        }

        downloadExcelButton.addEventListener('click', function () {
            const filteredData = expenseDataGlobal.map(expense => ({
                'User Name': expense.userName,
                'Category Name': expense.categoryName,
                'Amount': expense.amount,
                'Description': expense.description,
                'Expense Date': expense.expenseDate
            }));

            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.json_to_sheet(filteredData);

            XLSX.utils.book_append_sheet(wb, ws, "Expense Report");

            XLSX.writeFile(wb, "Expense_Report.xlsx");
        });
    </script>
</body>

</html>


















<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Expense Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
</head>

<body>
    <div class="container mt-4">
        <h2>Generate Expense Report</h2>
        <form id="reportForm">
            <div class="d-flex gap-2 mb-3">
                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" class="form-control" required>
                </div>
            </div>
            <button type="button" class="btn btn-primary" id="generateReportButton">Generate Report</button><br><br>
            <button type="button" class="btn btn-success" id="downloadExcelButton" style="display:none;">Download Excel</button>
        </form>

        <div class="table-responsive mt-4">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>S.no</th>
                        <th>User Name</th>
                        <th>Category Name</th>
                        <th>Amount</th>
                        <th>Description</th>
                        <th>Expense Date</th>
                    </tr>
                </thead>
                <tbody id="expenseData">

                </tbody>
            </table>
        </div>
    </div>

    <script>
        const generateReportButton = document.getElementById('generateReportButton');
        const downloadExcelButton = document.getElementById('downloadExcelButton');
        const tableData = document.getElementById('expenseData');
        let expenseDataGlobal = [];

        const userId = localStorage.getItem('userId'); 

        if (!userId) {
            alert("You must be logged in to view your report.");
            window.location.href = '/login'; 
        } else{
            console.log('Logged-in User ID:', userId);
        }

        generateReportButton.addEventListener('click', function () {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            if (!startDate || !endDate) {
                alert('Please select both start and end dates.');
                return;
            }

            let url = `http://localhost:1000/api/expense/report?userId=${userId}&startDate=${startDate}&endDate=${endDate}`;

            fetch(url)
                .then(response => response.json())
                .then(expenseData => {
                    let trHtml = '';
                    expenseDataGlobal = expenseData; 

                    if (expenseData.length === 0) {
                        trHtml = `<tr><td colspan="6" class="text-center">No expenses found for the selected filters.</td></tr>`;
                    } else {
                        expenseData.forEach((expense, index) => {
                            trHtml += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${expense.userName}</td>
                                    <td>${expense.categoryName}</td>
                                    <td>${expense.amount}</td>
                                    <td>${expense.description}</td>
                                    <td>${expense.expenseDate}</td>
                                </tr>
                            `;
                        });
                    }
                    tableData.innerHTML = trHtml;

                    downloadExcelButton.style.display = 'block';
                })
                .catch(error => console.error('Error fetching expense data:', error));
        });

        downloadExcelButton.addEventListener('click', function () {
            const filteredData = expenseDataGlobal.map(expense => ({
                'User Name': expense.userName,
                'Category Name': expense.categoryName,
                'Amount': expense.amount,
                'Description': expense.description,
                'Expense Date': expense.expenseDate
            }));

            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.json_to_sheet(filteredData);

            XLSX.utils.book_append_sheet(wb, ws, "Expense Report");

            XLSX.writeFile(wb, "Expense_Report.xlsx");
        });
    </script>
</body>

</html> -->








<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Expense Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
</head>

<body>
    <div class="container mt-4">
        <h2>Generate Expense Report</h2>
        <form id="reportForm">
            <div class="d-flex gap-2 mb-3">
                <div class="mb-3">
                    <label for="userName" class="form-label">User Name</label>
                    <select id="userName" class="form-select" required>
                        <option value="">Select User</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" class="form-control" required>
                </div>

                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" class="form-control" required>
                </div>
            </div>
            <button type="button" class="btn btn-primary" id="generateReportButton">Generate Report</button><br><br>
            <button type="button" class="btn btn-success" id="downloadExcelButton" style="display:none;">Download Excel</button>
        </form>

        <div class="table-responsive mt-4">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>S.no</th>
                        <th>User Name</th>
                        <th>Category Name</th>
                        <th>Amount</th>
                        <th>Description</th>
                        <th>Expense Date</th>
                    </tr>
                </thead>
                <tbody id="expenseData">
                
                </tbody>
            </table>
        </div>
    </div>

    <script>
        const generateReportButton = document.getElementById('generateReportButton');
        const downloadExcelButton = document.getElementById('downloadExcelButton');
        const tableData = document.getElementById('expenseData');
        const userNameSelect = document.getElementById('userName');
        let expenseDataGlobal = [];

        fetch("http://localhost:1000/api/user") 
            .then(response => response.json())
            .then(users => {
                let optionsHtml = '<option value="">Select User</option>';
                users.forEach(user => {
                    optionsHtml += `<option value="${user.id}">${user.userName}</option>`;
                });
                userNameSelect.innerHTML = optionsHtml;
            })
            .catch(error => console.error(error));

        generateReportButton.addEventListener('click', function () {
            const userName = userNameSelect.value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            let url = `http://localhost:1000/api/expense/report?userName=${userName}&startDate=${startDate}&endDate=${endDate}`;

            fetch(url)
                .then(response => response.json())
                .then(expenseData => {
                    let trHtml = '';
                    expenseDataGlobal = expenseData; 

                    if (expenseData.length === 0) {
                        trHtml = `<tr><td colspan="6" class="text-center">No expenses found for the selected filters.</td></tr>`;
                    } else {
                        expenseData.forEach((expense, index) => {
                            trHtml += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${expense.userName}</td>
                                    <td>${expense.categoryName}</td>
                                    <td>${expense.amount}</td>
                                    <td>${expense.description}</td>
                                    <td>${expense.expenseDate}</td>
                                </tr>
                            `;
                        });
                    }
                    tableData.innerHTML = trHtml;

                    downloadExcelButton.style.display = 'block';
                })
                .catch(error => console.error('Error fetching expense data:', error));
        });

        downloadExcelButton.addEventListener('click', function () {
            const filteredData = expenseDataGlobal.map(expense => ({
                'User Name': expense.userName,
                'Category Name': expense.categoryName,
                'Amount': expense.amount,
                'Description': expense.description,
                'Expense Date': expense.expenseDate
            }));

            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.json_to_sheet(filteredData);

            XLSX.utils.book_append_sheet(wb, ws, "Expense Report");

            XLSX.writeFile(wb, "Expense_Report.xlsx");
        });
    </script>
</body>

</html> -->









































<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container">
        <h1 class="mt-5">Expense Report</h1>
        <form id="reportForm" class="mt-4">
            <div class="row">
                <div class="col-md-3">
                    <label for="startDate">Start Date</label>
                    <input type="date" id="startDate" class="form-control" required>
                </div>
                <div class="col-md-3">
                    <label for="endDate">End Date</label>
                    <input type="date" id="endDate" class="form-control" required>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary">Generate Report</button>
                </div>
            </div>
        </form>

        <table class="table table-bordered mt-4" id="expenseReportTable" style="display:block;">
            <thead>
                <tr>
                    <th>S.no</th>
                    <th>User</th>
                    <th>Category</th>
                    <th>Amount</th>
                    <th>Expense Date</th>
                </tr>
            </thead>
            <tbody>

            </tbody>
        </table>
    </div>

</body>
<script>
    document.getElementById('reportForm').addEventListener('submit', function(e) {
        e.preventDefault();  

        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;

        fetch(`/api/expense/report?startDate=${startDate}&endDate=${endDate}`)
            .then(response => response.json())
            .then(data => {
                const tbody = document.querySelector('#expenseReportTable tbody');
                tbody.innerHTML = ''; 

                if (data.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="5">No expenses found for the given date range.</td></tr>';
                } else {
                    data.forEach((expense, index) => {
                        const row = `
                            <tr>
                                <td>${index + 1}</td>
                                <td>${expense.userName}</td>
                                <td>${expense.categoryName}</td>
                                <td>${expense.amount}</td>
                                <td>${expense.expenseDate}</td>
                            </tr>
                        `;
                        tbody.innerHTML += row;
                    });
                }
            })
            .catch(error => {
                console.log( error);

            });
    });

</script>

</html> -->
<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Expense Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
    <div class="container mt-4">
        <h1>Generate Expense Report</h1>

        Filters for the Report
        <form id="reportForm">
            <div class="d-flex gap-2 mb-3">
                <div class="mb-3">
                    <label for="userId" class="form-label">User</label>
                    <input type="number" id="userId" class="form-control" placeholder="User ID">
                </div>
                <div class="mb-3">
                    <label for="categoryId" class="form-label">Category</label>
                    <input type="number" id="categoryId" class="form-control" placeholder="Category ID">
                </div>
                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" class="form-control">
                </div>
                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" class="form-control">
                </div>
                <div class="mb-3">
                    <label for="minAmount" class="form-label">Min Amount</label>
                    <input type="number" id="minAmount" class="form-control" placeholder="Min Amount">
                </div>
                <div class="mb-3">
                    <label for="maxAmount" class="form-label">Max Amount</label>
                    <input type="number" id="maxAmount" class="form-control" placeholder="Max Amount">
                </div>
            </div>

            Generate Report Button
            <button type="button" class="btn btn-primary" id="generateReportButton">Generate Report</button>
        </form>

        Table to display the expense data
        <div class="table-responsive mt-4">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>S.no</th>
                        <th>User Name</th>
                        <th>Category Name</th>
                        <th>Amount</th>
                        <th>Description</th>
                        <th>Expense Date</th>
                        <th>Payment Method</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="expenseData">
                    Dynamic expense data will be populated here
                </tbody>
            </table>
        </div>
    </div>

    <script>
        const generateReportButton = document.getElementById('generateReportButton');
        const tableData = document.getElementById('expenseData');

        generateReportButton.addEventListener('click', function () {
        
            const userId = document.getElementById('userId').value;
            const categoryId = document.getElementById('categoryId').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const minAmount = document.getElementById('minAmount').value;
            const maxAmount = document.getElementById('maxAmount').value;

            const queryParams = [];

            let url = 'http://localhost:1000/api/expense/report?';

            if (userId) {
                url += `userId=${userId}&`;
            }
            if (categoryId) {
                url += `categoryId=${categoryId}&`;
            }
            if (startDate && endDate) {
                url += `startDate=${startDate}&endDate=${endDate}&`;
            }
            if (minAmount) {
                url += `minAmount=${minAmount}&`;
            }
            if (maxAmount) {
                url += `maxAmount=${maxAmount}&`;
            }

            
            url = url.endsWith('&') || url.endsWith('?') ? url.slice(0, -1) : url;

    
            fetch(url)
                .then(response => response.json())
                .then(expenseData => {
                    let trHtml = '';
                    if (expenseData.length === 0) {
                        trHtml = `<tr><td colspan="8" class="text-center">No expenses found for the selected filters.</td></tr>`;
                    } else {
                        expenseData.forEach((expense, index) => {
                            trHtml += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${expense.userName}</td>
                                    <td>${expense.categoryName}</td>
                                    <td>${expense.amount}</td>
                                    <td>${expense.description}</td>
                                    <td>${expense.expenseDate}</td>
                                    <td>${expense.paymentMethod}</td>
                                    <td>
                                        <a href="/expense/${expense.expenseId}"><button class="btn btn-warning btn-sm">Edit</button></a>
                                        <button class="btn btn-danger btn-sm" onClick="deleteExpenseById(${expense.expenseId})">Delete</button>
                                    </td>
                                </tr>
                            `;
                        });
                    }
                    tableData.innerHTML = trHtml;
                })
                .catch(error => console.error('Error fetching expense report:', error));
        });

    
        function deleteExpenseById(id) {
            if (confirm('Are you sure you want to delete this expense?')) {
                fetch(`http://localhost:1000/api/expense/${id}`, {
                    method: 'DELETE'
                })
                    .then(response => response.text())
                    .then(() => {
                        alert('Expense deleted successfully!');
                        document.location.reload();
                    })
                    .catch(error => console.error('Error deleting expense:', error));
            }
        }
    </script>
</body>

</html> -->
